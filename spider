#include <iostream>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <unistd.h>
#include <netdb.h>
#include <stdio.h>


using namespace std;

#define BUF_SIZE 1024

void getHostByName(string& ip4)
{
    const char* domain = "www.baidu.com";
    struct hostent *hptr  = gethostbyname(domain);
    if (hptr == NULL) {
        printf("gethostbyname error for host: %s: %s\n", domain, hstrerror(h_errno));
        return;
    }
    printf("\tofficial: %s\n", hptr->h_name);
 
    char **pptr;
    char str[20];
    for (pptr=hptr->h_aliases; *pptr!=NULL; pptr++) {
        printf("\ttalias: %s\n", *pptr);
    }
 
    
    for (pptr = hptr->h_addr_list; *pptr!=NULL; pptr++) {
        printf("\taddress: %s\n", inet_ntop(hptr->h_addrtype, hptr->h_addr, str, sizeof(str)));
        ip4 = inet_ntop(hptr->h_addrtype, hptr->h_addr, str, sizeof(str));
    }

}

int main (int argc, char* argv[])
{
    string ip4;
    getHostByName(ip4);

	int  fd = socket (AF_INET, SOCK_STREAM, 0);
	sockaddr_in addrS;
	addrS.sin_family = AF_INET;
	addrS.sin_port = htons(80);
	addrS.sin_addr.s_addr = inet_addr(ip4.c_str());
	
	connect (fd, (sockaddr*)&addrS, sizeof(addrS));
	
	// "GET /web/index_new.html HTTP/1.0\r\n"
	string req = 	"GET / HTTP/1.0\r\n"
					"HOST: www.baidu.com\r\n"
					"Accept: */*\r\n"
					"Connection: Keep-Alive\r\n"
					"User-Agent: Mozilla/5.0\r\n"
					"Referer: www.baidu.com\r\n\r\n";
					
	send (fd, req.c_str(), req.size(), 0);
	while(1) {
		char buf[BUF_SIZE] = "";
		int size = recv(fd, buf, BUF_SIZE - 1, 0);
		if (size  == -1) return -1;
		else if(size == 0) break;
		
		//cout << buf << fflush;
		
	}
	close(fd);
	
	return 0;
}













